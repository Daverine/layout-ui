/*--- DIVIDER ---*/

hr, .divider {
	font-size: 1rem;
	margin: 1em 0;
	line-height: 1;
	font-weight: bold;
	text-align: center;
	text-transform: uppercase;
	color: $text-color;
	user-select: none;
	-webkit-tap-highlight-color: transparent;

	&:empty:not(.vertical):not(.stackable) {
		border-top: 1px solid $divider-bd-color;
	}

	&.inverted {
		color: #fff;
		border-color: $inverted-bd-color !important;
	}

	&.transparent { opacity: 0 !important; }

	&.compact { margin: 0.5em; }

	&.loose {
		margin-top: 2em;
		margin-bottom: 2em;
	}

	&.no-spacing { margin: 0; }

	&.clearing { clear: both; }

	// Divider with content

	&:not(:empty):not(.vertical):not(.stackable) {
		display: table;
		white-space: nowrap;
		overflow: hidden;
		position: relative;
		height: auto;
		width: 100%;
		background: 0 0;

		&::before, &::after {
			content: "";
			display: table-cell;
			position: relative;
			height: 1px;
			width: 50%;
			border-bottom: 1px solid $divider-bd-color;
		}

		&.inverted::before, &.inverted::after {
			border-color: $inverted-bd-color !important;
		}

		&::before {
			left: 0;
			margin-right: 1em;
			transform: translate(-1em, -50%);
		}

		&:after {
			right: 0;
			margin-left: 1em;
			transform: translate(1em, -50%);
		}
	}
}

// Vertical

hr.vertical,
.vertical.divider {
	position: absolute;
	z-index: 2;
	top: 50%;
	left: -1000%;
	margin: 0;
	padding: 0em;
	width: auto;
	height: 50%;
	line-height: 0em;
	transform: translateX(-50%);

	&:not(:empty)::before, &:not(:empty)::after {
		position: absolute;
		left: 50%;
		content: "";
		z-index: 3;
		border-left: 1px solid $divider-bd-color;
		width: 0%;
		height: calc(100% - 1em);
	}

	&.inverted::before, &.inverted::after {
		border-color: $inverted-bd-color !important;
	}

	&:not(:empty)::before {
		top: -100%;
	}

	&:not(:empty)::after {
		top: auto;
		bottom: 0px;
	}

	&:empty {
		height: 100%;
		border-left: 1px solid $divider-bd-color;
		width: 0%;
		top: 0%;
		color: transparent;
		text-shadow: none;
	}
}
	
$x: 1;
@while $x <= ($max-divi) {
	$i: 2;
	@while $i <= ($max-divi) {
		$y: $i + $x - 1;
		@if $y >= $max-divi { $y: $max-divi; }
		$perc: unquote((100 / $y * $x) + "%");
		.divided-to-#{$y} > hr.vertical:nth-of-type(#{$x}),
		.divided-to-#{$y} > hr.stackable:nth-of-type(#{$x}),
		.divided-to-#{$y} > .vertical.divider:nth-of-type(#{$x}),
		.divided-to-#{$y} > .stackable.divider:nth-of-type(#{$x}) {left: $perc;}
		@if $y == $max-divi { $i: $max-divi; }
		@if $x == ($max-divi - 1) { $x: $max-divi; }
		$i: $i + 1;
	}
	$x: $x + 1;
}

@media #{$medium-and-up} {
	hr.stackable,
	.stackable.divider {
		position: absolute;
		z-index: 2;
		top: 50%;
		left: -1000%;
		margin: 0;
		padding: 0em;
		width: auto;
		height: 50%;
		line-height: 0em;
		transform: translateX(-50%);

		&:not(:empty)::before, &:not(:empty)::after {
			position: absolute;
			left: 50%;
			content: "";
			z-index: 3;
			border-left: 1px solid $divider-bd-color;
			width: 0%;
			height: calc(100% - 1em);
		}

		&.inverted::before, &.inverted::after {
			border-color: $inverted-bd-color !important;
		}

		&:not(:empty)::before {
			top: -100%;
		}

		&:not(:empty)::after {
			top: auto;
			bottom: 0px;
		}

		&:empty {
			height: 100%;
			border-left: 1px solid $divider-bd-color;
			width: 0%;
			top: 0%;
			color: transparent;
			text-shadow: none;
		}
	} 
}

@media #{$medium-and-down} {
	hr.stackable,
	.stackable.divider {
		left: auto !important;
		
		&:empty {
			border-top: 1px solid $divider-bd-color;
		}

		&.transparent {
			opacity: 0 !important;
		}

		// Stackable divider with content

		&:not(:empty) {
			display: table;
			white-space: nowrap;
			overflow: hidden;
			position: relative;
			height: auto;
			width: 100%;
			background: 0 0;

			&::before, &::after {
				content: "";
				display: table-cell;
				position: relative;
				height: 1px;
				width: 50%;
				border-bottom: 1px solid $divider-bd-color;
			}

			&.inverted::before, &.inverted::after {
				border-color: $inverted-bd-color !important;
			}

			&::before {
				left: 0;
				margin-right: 1em;
				transform: translate(-1em, -50%);
			}

			&:after {
				right: 0;
				margin-left: 1em;
				transform: translate(1em, -50%);
			}
		}
	}
}